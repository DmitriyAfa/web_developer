import { TSubjectOfQuestions } from "../../../../types/Frontend/questions";

const commonQestions10 = [
  {
    question: "Что такое React",
    answers: [
      {
        answer: [
          `Это JavaScript-библиотека предназначенная для создания пользовательских интерфейсов (UI)`,
        ],
        id: 0,
      },
    ],
    id: 0,
  },
  {
    question: "Какие особенности React",
    answers: [
      {
        answer: [
          `Реактивность, virtual DOM, компонентный подход, декларативный подход, единая документация.`,
        ],
        id: 0,
      },
    ],
    id: 1,
  },
  {
    question: "Что такое virtual DOM",
    answers: [
      {
        answer: [
          `Это концепция при которой DOM хранится в виртуальном пространстве в памяти и синхронизируется с настоящем DOM при помощи 
          react библиотеки ReactDom. Такая синхронизация называется согласованием.  
          `,
        ],
        id: 0,
      },
    ],
    id: 2,
  },
  {
    question: "Какая разница между использованием DOM и VDOM",
    answers: [
      {
        answer: [
          `VDOM занимает меньше места, манипуляции происходят быстрее. Нельзя напрямую обновить HTML напрямую.`,
        ],
        id: 0,
      },
    ],
    id: 3,
  },
  {
    question: "Что такое JSX",
    answers: [
      {
        answer: [
          `JavaScript XML. Синтаксический сахар над React.CreateElemet(component, props, ...children). Позволяет писать HTML разметку в коде React`,
        ],
        id: 0,
      },
    ],
    id: 4,
  },
  {
    question: "Как работает VDOM",
    answers: [
      {
        answer: [
          `При изменении данных (state и т.д.) прориходит рендеринг который сравнивает предыдущую версию VDOM-дерева с текущей версией, которая изменилась при изменении данных, и обновляет только то, что изменилось / добавилось`,
        ],
        id: 0,
      },
    ],
    id: 5,
  },
  {
    question: "Почему браузер не может читать JSX ?",
    answers: [
      {
        answer: [
          `Отсутствует средства для чтения JSX-кода. Нужно преобразовывать в JavaScript-код, например, с помощью Babel`,
        ],
        id: 0,
      },
    ],
    id: 6,
  },
  {
    question: "В чём разница между элементом и компонентом",
    answers: [
      {
        topic: "Элемент",
        answer: [
          `Простой объект который описывает что мы увидим на экране, ну или в DOM. Может содержать в себе другие элементы`,
        ],
        id: 0,
      },
      {
        topic: "Компонент",
        answer: [
          "Компонент может быть классовым или функциональным",
          `Так же как и элемент может возвращать разметку, но при этом может получать на вход аргументы в виде props и на их основе возвращать разметку. Так же может иметь внутреннее состояние`,
        ],
        id: 1,
      },
    ],
    id: 7,
  },
  {
    question: "Что такое props",
    answers: [
      {
        answer: [
          `Данные которые компонент принимает извне. Эти данные используются для отрисовки элементов. Props нельзя изменять внутри компонента который их принимает`,
        ],
        id: 0,
      },
    ],
    id: 8,
  },
  {
    question: "Что такое state",
    answers: [
      {
        answer: [
          `Это внутренее состояние компонента которое можно изменять. Оно создается, определяется и доступно только внутри самого компонента. Значения из state должны использоваться при рендеринге`,
        ],
        id: 0,
      },
    ],
    id: 9,
  },
];

const commonQuestions20 = [
  {
    question:
      "Что будет если передать в boolean-значение, null или undefined как children",
    answers: [
      {
        answer: [`Проигнорируются`],
        id: 0,
      },
    ],
    id: 10,
  },
  {
    question: "Для чего используется конструктор в классовых компонентах",
    answers: [
      {
        answer: [
          `Конструктор - это специальный метод, служащий для создания и инициализации объектов в классах`,
          `Конструктор позволяет произвести начальную инициализацию, которая должна быть выполненная до того, как будут вызваны остальные методы`,
          `Конструктор в классовых компонентах используется для биндингов методов класса`,
        ],
        id: 0,
      },
    ],
    id: 11,
  },
  {
    question: "Почему атрибуты JSX пишутся в стиле camelCase",
    answers: [
      {
        answer: [`React ближе к JavaScript`],
        id: 0,
      },
    ],
    id: 12,
  },
  {
    question: "Почему className а не class ",
    answers: [
      {
        answer: [`Class - это ключевое слово в react`],
        id: 0,
      },
    ],
    id: 13,
  },
  {
    question: "Как обновить state ? Почему не стоит делать этого напрямую",
    answers: [
      {
        answer: [
          `Состояние можно обновит с помощью setState в классовых компонентах, а так же с помощью специального метода жизненного цикла forceUpdate. В функциональных компонентах можно обновить с помощью метода обновления который даёт хук useState вторым параметром. А так же при рендеринге родительского компонента`,
          `Не стоит обновлять напрямую потому что в этом случае теряется смысл реакта. Не будет проиходить рендеринг`,
        ],
        id: 0,
      },
    ],
    id: 14,
  },
  {
    question:
      "Что такое key ? Почему не рекомендуется использовать index в качестве key ",
    answers: [
      {
        answer: [
          `key используется для перечисления элементов в массиве и отрисовке их в разметке`,
          `Если использовать index в качестве key, тогда при удлении/перемещении элемента в массиве значение его key (который является index-ом) как бы "передастся" соседнему элементу и react перепутает эти элементы`,
          `Другими словами key - это некий маркер для элемента в массиве с помощью которого клеймиться конкретный элемент в массиве. Такой маркер должен быть уникальным в пределе массива`,
        ],
        id: 0,
      },
    ],
    id: 15,
  },
  {
    question: "Как можно передать данные между соседними компонентами",
    answers: [
      {
        answer: [
          `Воспользоваться родительским компонентом. Воспользоваться контекстом. Воспользоваться state manager`,
        ],
        id: 0,
      },
    ],
    id: 16,
  },
  {
    question: "Что такое компонент высшего порядка (HOC)",
    answers: [
      {
        topic: "Higher Order Component",
        answer: [
          "Это функция которая принимает компонент и возвращает новый компонент. Полезен для переиспользования одной и той же логики",
        ],
        id: 0,
      },
    ],
    id: 17,
  },
  {
    question: "Что такое Fragment ? Почему фрагмент лучше чем div ?",
    answers: [
      {
        topic: "Higher Order Component",
        answer: [
          "Это функция которая принимает компонент и возвращает новый компонент. Полезен для переиспользования одной и той же логики",
        ],
        id: 0,
      },
    ],
    id: 18,
  },
  {
    question: "Изменение состояния в React синхронное или асинхронное",
    answers: [
      {
        answer: [
          `Асинхронное. Реакт накапливает пачку изменений состояний и уже затем происходит рендеринг и изменение DOM-дерева`,
        ],
        id: 0,
      },
    ],
    id: 19,
  },
];

const commonQuestions = {
  title: "Общие вопросы по React",
  questions: [...commonQestions10, ...commonQuestions20],
  id: 0,
};

export const questions: TSubjectOfQuestions = [commonQuestions];
