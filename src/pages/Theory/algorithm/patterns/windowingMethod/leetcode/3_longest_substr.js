/**
 * Понимание
 * Для строки s, найти самую длинную подстроку без повторяющихся букв
 *
 * Задача на динамические окна
 *
 * Планирование
 *
 * Создаём подстроку
 * Переменную куда будем складывать максимальную длину
 * Переменную с позицией
 *
 * Проходимся циклом по длине строки
 *
 * Запоминаем позицию текущего элемента
 *
 * Если позиция уже встречалась ( элемент встречался)
 * присвоем подстроке элементы подстроки начиная ( но не включая) с первой позиции повторяющегося элемента
 *
 * Метод substring возвращает часть строки между start и end
 * если задали start больше end, то сработает так будто аргументы поменяны местами
 *
 *
 * После условия добавим в подстроку текущий символ
 * вычислим максимум
 *
 * на выходе из функции вернём максимум
 */
function lengthOfLongestSubstring(s) {
  let subStr = "";
  let max = 0;
  let pos;
  for (let i = 0; i < s.length; i++) {
    pos = subStr.indexOf(s[i]);
    if (pos !== -1) {
      subStr = subStr.substring(pos + 1);
    }
    subStr += s[i];
    max = Math.max(max, subStr.length);
  }
  return max;
}

console.log(lengthOfLongestSubstring("abcabcbb"));
